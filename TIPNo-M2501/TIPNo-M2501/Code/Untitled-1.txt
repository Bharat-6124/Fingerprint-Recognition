# Step 1: Install dependencies
!pip install -q opencv-python-headless pytesseract matplotlib # Step 2: Import libraries
import cv2
import numpy as 
import matplotlib.pyplot as plt from google.colab import files # Step 3: Upload image uploaded = files.upload()
file_name = next(iter(uploaded))

image = cv2.imdecode(np.frombuffer(uploaded[file_name], np.uint8), cv2.IMREAD_COLOR)
# Step 4: Enhance image for clarity (natural, no B&W threshold) def enhance_image(img):
# Step 1: Enlarge the image (4x) h, w = img.shape[:2]
enlarged = cv2.resize(img, (w*4, h*4), interpolation=cv2.INTER_CUBIC)
 
# Step 2: Convert to LAB and apply CLAHE (contrast) lab = cv2.cvtColor(enlarged, cv2.COLOR_BGR2LAB) l, a, b = cv2.split(lab)lahe = cv2.createCLAHE(clipLimit=3.0, tileGridSize=(8,8)) cl = clahe.apply(l)
limg = cv2.merge((cl,a
\
enhanced = cv2.cvtColor(limg, cv2.COLOR_LAB2BGR) # Step 3: Sharpen image
kernel = np.array([[0, -1, 0],
[-1, 5,-1],
[0, -1, 0]])
sharpened = cv2.filter2D(enhanced, -1, kernel) return sharpened
# Step 5: Process image

result_img = enhance_image(image)
# Step 6: Display both original and enhanced plt.figure(figsize=(16, 10))
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB)) plt.title("Original Image")
plt.axis("off")
 

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(result_img, cv2.COLOR_BGR2RGB)) plt.title("Enhanced Image (Clear, Big Text)")
plt.axis("off") plt.show()
# Step 7: Extract Text (Optional)

text = pytesseract.image_to_string(result_img) print("üîç OCR Output:\n")
printext.strip() if text.strip() else "‚ö†Ô∏è No readable text. Try clearer
input."